package test.othertools;

import junit.framework.TestCase;
import org.jdraft._class;
import org.jdraft.io._io;
import org.jdraft.macro.*;
import org.jdraft.runtime._runtime;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDateTime;

/** Re implement Code generation as explained (using JavaPoet) from youtube videos using jdraft instead*/
public class JavaPoetTest extends TestCase {

    /** https://youtu.be/4xngC-uB6eM?t=30*/
    public void testFlightMsg(){
        _class _c = _class.of("com.mvpjava.javapoet.autogen.FlightMsg255")
            .field("private final int aircraftId;")
            .constructor("public FlightMsg255(final int aircraftId){ this.aircraftId = aircraftId; }")
            .setHeaderComment("AUTO_GENERATED BY JDRAFT");
        //when we write code to a file... it will put it in the correct path
        Path p = _io.out("C:\\temp\\src", _c);
        assertEquals( Paths.get("C:\\temp\\src\\com\\mvpjava\\javapoet\\autogen\\FlightMsg255.java"), p );
        System.out.println( _c );
    }

    /**
     * https://youtu.be/4xngC-uB6eM?t=30
     * Here we Reimplemented the same thing, but used @macros(@_get, @_autoConstructor)
     * to simplify & reduce the amount of code
     */
    public void testFlightMsg_wMacros(){
        _class _c = _class.of("com.mvpjava.javapoet.autogen.FlightMsg255", new @_get @_autoConstructor Object(){
            @_private @_final int aircraftId;
        }).setHeaderComment("AUTO_GENERATED BY JDRAFT");

        Path p = _io.out("C:\\temp\\src", _c);
        assertEquals( Paths.get("C:\\temp\\src\\com\\mvpjava\\javapoet\\autogen\\FlightMsg255.java"), p );
        //System.out.println( _c );
    }

    /** https://youtu.be/NBFmI1PaZwc?t=33 */
    public void testFlightMsgDateTime(){
        _class _c = _class.of("com.mvpjava.javapoet.autogen.FlightMsg255", new Object(){
            @_private @_final int aircraftId;
            @_private @_final String departure;
            /**
             * Time of Departure will be set via tower confirmation
             */
            @_private LocalDateTime timeOfDeparture;

            public int getAircraftId(){
                return this.aircraftId;
            }
            public String getDeparture(){
                return this.departure;
            }

            //@_toCtor converts this "method" to a constructor on the _draft model
            @_toCtor public void ct(final int aircraftId, final String departure){
                this.aircraftId = aircraftId;
                this.departure = departure;
            }

            public LocalDateTime takeOffConfirmed(){
                this.timeOfDeparture = LocalDateTime.now();
                System.out.println("Tower has confirmed take off");
                return timeOfDeparture;
            }
        }).setHeaderComment("AUTO_GENERATED BY JDRAFT");

        // NOTE: because we passed in an Anonymous Object Instance to the _class.of builder,
        // jdraft will use Reflection to add imports to any (non-"java.lang") types on
        // the public API (fields, parameters, return types):
        // ...so the class java.time.LocalDateTime is automatically imported

        //we can test/verify this by ensuring the model compiles
        _runtime.compile(_c); //if this doesnt compile... this will fail

        System.out.println(_c);
    }
}
